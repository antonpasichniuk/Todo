// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Todo.Data.Context;

#nullable disable

namespace Todo.Data.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Todo.Domain.Entities.TasksList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_tasks_lists");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_tasks_lists_created_by_id");

                    b.ToTable("tasks_lists", (string)null);
                });

            modelBuilder.Entity("Todo.Domain.Entities.TasksListAccess", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("TasksListId")
                        .HasColumnType("integer")
                        .HasColumnName("tasks_list_id");

                    b.Property<string>("AccessRole")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("access_role");

                    b.HasKey("UserId", "TasksListId")
                        .HasName("pk_tasks_list_accesses");

                    b.HasIndex("TasksListId")
                        .HasDatabaseName("ix_tasks_list_accesses_tasks_list_id");

                    b.ToTable("tasks_list_accesses", (string)null);
                });

            modelBuilder.Entity("Todo.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Todo.Domain.Entities.TasksList", b =>
                {
                    b.HasOne("Todo.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tasks_lists_users_created_by_id");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Todo.Domain.Entities.TasksListAccess", b =>
                {
                    b.HasOne("Todo.Domain.Entities.TasksList", "TasksList")
                        .WithMany("Accesses")
                        .HasForeignKey("TasksListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tasks_list_accesses_tasks_lists_tasks_list_id");

                    b.HasOne("Todo.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tasks_list_accesses_users_user_id");

                    b.Navigation("TasksList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Todo.Domain.Entities.TasksList", b =>
                {
                    b.Navigation("Accesses");
                });
#pragma warning restore 612, 618
        }
    }
}
